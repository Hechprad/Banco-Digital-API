swagger: '2.0'
info:
  description: "Administra a movimentação bancária do correntista e controla o acesso através de CPF e senha."
  version: "1.0.0"
  title: "Banco Digital API"
  termsOfService: "http:localhost:8085/banco-digital-api/v1/termo-uso"
  contact:
    name: "Suporte"
    url: "http:localhost:8085/banco-digital-api/v1/suporte"
    email: "suporte@bancodigitalapi.com"
host: "localhost:8085"
basePath: "/banco-digital-api/v1"
schemes:
 - https
 - http
tags:
  - name: "Correntista"
  - name: "Favorecido"
  - name: "Conta"
  - name: "Transacao"
  - name: "Extrato"
securityDefinitions:
  BasicAuth:
    type: basic
security: 
  - BasicAuth: []

definitions:
  Pessoa:
    type: object
    required:
    - "nome"
    - "cpf"
    properties:
      nome:
        type: string
        example: Jorge Hecherat
      cpf:
        type: string
        minLength: 1
        maxLength: 11
        example: 98989898987
  Correntista:
    allOf: 
      - $ref: '#/definitions/Pessoa'
    type: object
    required: 
    - "senha"
    - "contas"
    properties:
      id:
        type: integer
        format: int64
        example: 55
      senha:
        type: string
        format: password
        example: senhaSecreta123
      contas:
        type: array
        items:
          $ref: '#/definitions/Conta'
  Favorecido:
    allOf: 
      - $ref: '#/definitions/Pessoa'
    type: object
    required:
    - "banco"
    - "numeroAgencia"
    - "numeroConta"
    properties:
      id:
        type: integer
        format: int64
        example: 88
      banco:
        type: string
        example: Banco do Brasil
      numeroAgencia:
        type: integer
        format: int64
        example: 1234
      numeroConta:
        type: integer
        format: int64
        example: 12345
      conta:
        $ref: '#/definitions/Conta'
  Conta:
    type: object
    required:
    - "agencia"
    - "saldo"
    - "correntista"
    properties:
      agencia:
        type: integer
        format: int64
        example: 1234
      numero:
        type: integer
        format: int64
        example: 12345
      digito:
        type: integer
        format: int32
        example: 7
      saldo:
        type: number
        format: double
        example: 1020.34
      correntista:
        $ref: '#/definitions/Correntista'
      favorecidos:
        type: array
        items:
          $ref: '#/definitions/Favorecido'
      extrato:
        type: array
        items:
          $ref: '#/definitions/Extrato'
  Transacao:
    type: object
    required:
    - "tipo"
    - "valor"
    - "data"
    - "conta"
    - "favorecido"
    properties:
      id:
        type: integer
        format: int64
        example: 77
      tipo:
        type: string
        enum:
          - DEPOSITO
          - DEBITO
      valor:
        type: number
        format: double
        example: 1256.94
      data:
        type: string
        format: date-time
      conta:
        $ref: '#/definitions/Conta'
      favorecido:
        $ref: '#/definitions/Favorecido'
  Extrato:
    type: object
    properties:
      transacoes:
        type: array
        items:
          $ref: '#/definitions/Transacao'